{"version":3,"sources":["images/no_image.png","components/SearchBar.js","components/ModalDetails.js","components/Movies.js","components/MoviesWrapper.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","keyword","setKeyword","e","preventDefault","className","role","placeholder","onChange","target","value","type","ModalDetails","props","poster","poster_path","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","original_title","vote_average","src","alt","overview","Footer","onClick","onHide","Movies","backdrop_path","title","img_source","IMG","details","setDetails","React","modalShow","setModalShow","fetch","then","res","json","data","show","MoviesWrapper","children","Container","fluid","Row","Col","Home","movieList","setMovieList","useEffect","r","results","catch","map","item","key","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.5c6dd641.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.f184bd1f.png\";","import React, { useState } from 'react';\nimport './SearchBar.css';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [keyword, setKeyword] = useState('');\n\n  const handleChange = e => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ keyword });\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit} className='searchbar' role='search'>\n        <h2 className='searchbar-title'>¿Qué quieres ver hoy?</h2>\n        <div className='searchbar-child'>\n          <input\n            className='searchbar-input'\n            placeholder='Search a movie here...'\n            onChange={handleChange}\n            type='text'\n            value={keyword}\n          />\n          <button className='searchbar-button'>Search</button>\n        </div>\n      </form>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport './ModalDetails.css';\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const ModalDetails = props => {\n  let poster = `${BASE_IMG}${props.poster_path}`;\n\n  return (\n    <Modal\n      {...props}\n      size='md'\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id='contained-modal-title-vcenter'>\n          {props.original_title} | Rating: {props.vote_average}\n        </Modal.Title>\n      </Modal.Header>\n      <div className='modal-content__container'>\n        <img\n          className='modal-content__poster'\n          src={poster}\n          alt={props.original_title}\n        />\n        <div className='modal-content__description'>\n          <h4>About</h4>\n          <p className='modal-content__description'>{props.overview}</p>\n        </div>\n      </div>\n      <Modal.Footer>\n        <button className='modal-close' onClick={props.onHide}>\n          Close\n        </button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col } from 'react-bootstrap';\nimport './Movies.css';\n\nimport { ModalDetails } from './ModalDetails';\nimport IMG from '../images/no_image.png';\n\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const Movies = props => {\n  const { backdrop_path, title, overview, vote_average, id } = props;\n  const img_source = backdrop_path ? `${BASE_IMG}${backdrop_path}` : IMG;\n\n  const [details, setDetails] = useState('test');\n\n  const handleClick = () => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=56ee74fd8cde9ed20ae0f8f19ae002ac`\n    )\n      .then(res => res.json())\n      .then(data => {\n        setDetails(data);\n        setModalShow(true);\n      });\n  };\n\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <div className='movies-item' onClick={handleClick}>\n        <img className='movies-item__img' src={img_source} alt='' />\n        <div className='movies-item__details'>\n          <p className='movies-item__details--title'>\n            {title} | {vote_average}\n          </p>\n        </div>\n      </div>\n      <ModalDetails\n        {...details}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\n\nexport const MoviesWrapper = ({ children }) => {\n  return (\n    <Container fluid className='justify-content-center'>\n      <Row className='justify-content-center'>\n        <Col>{children}</Col>\n      </Row>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { SearchBar } from '../components/SearchBar';\nimport { Movies } from '../components/Movies';\nimport { MoviesWrapper } from '../components/MoviesWrapper';\n\nconst initialState = [\n  {\n    poster_path: '/wR5HZWdVpcXx9sevV1bQi7rP4op.jpg',\n    id: 550,\n    backdrop_path: '/8iVyhmjzUbvAGppkdCZPiyEHSoF.jpg',\n    original_title: 'Fight Club',\n    title: 'Fight Club',\n    vote_average: 8.4\n  },\n  {\n    id: 680,\n    video: false,\n    vote_count: 19138,\n    vote_average: 8.5,\n    title: 'Pulp Fiction',\n    release_date: '1994-09-10',\n    original_language: 'en',\n    original_title: 'Pulp Fiction',\n    genre_ids: [80, 53],\n    backdrop_path: '/eDMZmfnH50DDboUxTRnOYYpE9aY.jpg',\n    adult: false,\n    overview:\n      \"A burger-loving hit man, his philosophical partner, a drug-addled gangster's moll and a washed-up boxer converge in this sprawling, comedic crime caper. Their adventures unfurl in three stories that ingeniously trip back and forth in time.\",\n    poster_path: '/yAaf4ybTENKPicqzsAoW6Emxrag.jpg',\n    popularity: 50.046\n  },\n  {\n    adult: false,\n    backdrop_path: '/q2CtXYjp9IlnfBcPktNkBPsuAEO.jpg',\n    genre_ids: [9648, 53],\n    id: 77,\n    original_language: 'en',\n    original_title: 'Memento',\n    overview:\n      \"Leonard Shelby is tracking down the man who raped and murdered his wife. The difficulty of locating his wife's killer, however, is compounded by the fact that he suffers from a rare, untreatable form of short-term memory loss. Although he can recall details of life before his accident, Leonard cannot remember what happened fifteen minutes ago, where he's going, or why.\",\n    poster_path: '/uprP8rtOgMYJQ2h3ldDFvGsaBgH.jpg',\n    release_date: '2000-10-11',\n    title: 'Memento',\n    video: false,\n    vote_average: 8.2,\n    vote_count: 9735,\n    popularity: 32.283\n  }\n];\nexport const Home = () => {\n  const [movieList, setMovieList] = useState([]);\n\n  useEffect(function() {\n    fetch(\n      'https://api.themoviedb.org/3/movie/popular?api_key=56ee74fd8cde9ed20ae0f8f19ae002ac&page=1'\n    )\n      .then(r => r.json())\n      .then(data => setMovieList(data.results));\n  }, []);\n\n  const handleSubitForm = ({ keyword }) => {\n    if (keyword) {\n      const url =\n        'https://api.themoviedb.org/3/search/movie?api_key=56ee74fd8cde9ed20ae0f8f19ae002ac&query=';\n      fetch(url + keyword)\n        .then(res => res.json())\n        .then(data => setMovieList(data.results))\n        .catch([]);\n    } else {\n    }\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubitForm} />\n      <MoviesWrapper>\n        {movieList.map(item => (\n          <Movies key={item.id} {...item} />\n        ))}\n      </MoviesWrapper>\n    </>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/the-movie-db-api' component={Home} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}